<div style="display: flex; justify-content: space-between;">
    <p style="font-size: 16px">Transaktioner</p>

    <BSDropdown>
        <BSDropdownToggle Color="Color.Dark">Filtrera</BSDropdownToggle>
        <BSDropdownMenu>
            <BSDropdownItem OnClick="(() => SetCurrentCategory.InvokeAsync(null))">Visa alla kategorier</BSDropdownItem>
            <BSDropdownItem  IsDivider="true"/>
            @foreach (var category in Categories)
            {
                <BSDropdownItem OnClick="(() => SetCurrentCategory.InvokeAsync(category.Id))">@category.Name</BSDropdownItem>
            }
        </BSDropdownMenu>
    </BSDropdown>
    <BSButton Color="Color.Dark" OnClick="(() => TransactionDateModal.Show())">Ändra tidsintervall</BSButton>
    <BSModal @ref="TransactionDateModal">
        <BSModalHeader OnClick="(() => TransactionDateModal.Hide())">Ändra tidsintervall</BSModalHeader>
        <BSModalBody><DisplayDatesModal SetFromDate="SetFromDate" SetToDate="SetToDate" /></BSModalBody>
        <BSModalFooter>
            <BSButton Color="Color.Dark" @onclick="@(() => TransactionDateModal.Hide())">Stäng</BSButton>
        </BSModalFooter>
    </BSModal>
</div>

@code {
    BSModal TransactionDateModal { get; set; }

    [Parameter] public List<Category> Categories { get; set; }
    [Parameter] public Category CurrentCategory { get; set; }
    [Parameter] public EventCallback<string> SetCurrentCategory { get; set; }

    [Parameter] public DateTime FromDate { get; set; }
    [Parameter] public DateTime ToDate { get; set; }
    [Parameter] public EventCallback<ChangeEventArgs> SetFromDate { get; set; }
    [Parameter] public EventCallback<ChangeEventArgs> SetToDate { get; set; }





    protected override void OnParametersSet()
    {
        Console.WriteLine(CurrentCategory.Name + "from parameters set in header");
    }

}
